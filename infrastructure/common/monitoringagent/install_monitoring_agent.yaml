---
- hosts: '{{ target }}'
  vars:
    namespace: YOUR_NAMESPACE   # set via inventory or vars
    ubuntu_version: "20"        # your OS version (18/20/22)
  tasks:
    - name: Fetch monitoring-agent version info
      become: true
      shell: |
        oci os object get --namespace {{ namespace }} \
          --bucket-name unified-monitoring-agent-config \
          --name versionInfoV2.yml \
          --file /tmp/versionInfoV2.yml
      register: version_fetch

    - name: Parse stable version from YAML
      become: true
      shell: |
        grep -A1 "Ubuntu:" /tmp/versionInfoV2.yml | grep stableVersion | awk -F '"' '{print $2}'
      register: agent_version

    - name: Download latest monitoring agent .deb
      become: true
      shell: |
        oci os object get --namespace {{ namespace }} \
          --bucket-name unified-monitoring-agent-ub-bucket \
          --name unified-monitoring-agent-ub-{{ ubuntu_version }}-{{ agent_version.stdout }}.deb \
          --file /tmp/unified-monitoring-agent.deb
      args:
        creates: /tmp/unified-monitoring-agent.deb

    - name: Extract OCI Monitoring Agent
      unarchive:
        src: /tmp/monitoring-agent-latest.tar.gz
        dest: /opt/
        remote_src: yes
        creates: /opt/oracle/oci-monitoring-agent

    - name: Create monitoring agent directory
      file:
        path: /opt/oracle/oci-monitoring-agent/bin
        state: directory
        mode: '0755'

    - name: Copy monitoring agent config
      copy:
        src: "{{ cloudwatch_agent_config_path }}"
        dest: /opt/oracle/oci-monitoring-agent/bin/config.json
        mode: '0644'

    - name: Install and start OCI monitoring agent service
      systemd:
        name: oci-monitoring-agent
        state: started
        enabled: yes